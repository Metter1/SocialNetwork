{"version":3,"sources":["components/sidebar/sidebar.module.css","components/News/news.module.css","components/Messenger/messenger.module.css","components/Users/users.module.css","components/header/header.module.css","components/Profile/profile.module.css","components/common/Preloader/preloader.module.css","components/sidebar/Sidebar.jsx","redux/news-reducer.js","components/News/NewsComp/post/Post.jsx","components/hoc/withAuthRedirect.js","components/News/NewsContainer.jsx","components/News/NewsComp/News.jsx","components/News/NewsData.jsx","redux/messenger-reducer.js","components/Messenger/Message/Message.jsx","components/Messenger/MessengerUsers/MessengerUsers.jsx","components/Messenger/MessengerContainer.jsx","components/Messenger/Messenger.jsx","utils/object-helpers.js","api/api.js","redux/users-reducer.js","components/Users/Users.jsx","components/common/Preloader/Preloader.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Profile/Profile.jsx","redux/profile-reducer.js","components/Profile/ProfileInfo/ProfileStatusFunc.jsx","components/Profile/ProfileContainer.jsx","components/header/Header.jsx","redux/auth-reducer.js","components/header/HeaderContainer.jsx","components/Login/Login.jsx","redux/app-reducer.js","App.js","redux/redux-store.js","index.js"],"names":["module","exports","Sidebar","className","s","menu","to","activeClassName","active","list","icon","src","alt","ADD_POST","UPDATE_NEW_POST_TEXT","initialStore","posts","id","message","likes","newPostText","newsReducer","state","action","type","newText","Post","props","content","text","mapStateToPropsForRedirect","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","React","connect","compose","NewsPage","dispatch","addPost","updateNewPostText","updateNewPostTextActionCreator","postEl","map","p","NewPostEl","createRef","block","news","add","onChange","current","value","name","ref","placeholder","onClick","rightside","NewsData","NewsContainer","UPDATE_NEW_MESSAGE_TEXT","ADD_POST_MESSAGE","users","messages","newMessageText","messengerReducer","Message","MessengerUsers","path","MessengerPage","addMessage","updateNewMessageText","updateNewMessageTextActionCreator","usersEl","u","Messages","m","textarea","e","target","updateObjectInArray","items","itemID","objPropName","newObjProps","instance","axios","create","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","Follow","post","unFollow","delete","profileAPI","status","put","authAPI","email","password","remember","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_USERS_TOTAL_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","totalUsersCount","isFetching","followingInProgress","followSuccess","userID","unfollowSuccess","setUsers","setUsersTotalCount","totalPage","toggleIsFetching","toggleIsFollowingProgress","followUnfollowFlow","apiMethod","actionCreator","a","resultCode","usersReducer","followed","filter","Users","pagesCount","Math","ceil","pages","i","push","pagenation","pagenationActive","event","onPageChanged","user","photos","small","photo","user__name","disabled","some","unfollow","btn","follow","Preloader","preloader","getUsersS","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersAPIComponent","pageNumber","getPageNum","bind","totalCount","Profile","profile","wrapper","block_avatar","avatar","large","block_info","title","fullName","aboutMe","SET_USER_PROFILE","SET_STATUS","setUserStatus","profileReducer","ProfileStatusFunc","useState","editMode","setEditMode","setStatus","useEffect","autoFocus","onBlur","updateStatus","currentTarget","ProfileContainer","match","params","authorizeduserID","history","getUserProfile","getUserStatus","updateUserStatus","profilePage","withRouter","Header","head","row","logo","loginBlock","link","login","logout","SET_USER_DATA","LOGIN_SUCCESS","loginSuccess","setAuthUserData","getAuthUserData","authReducer","LoginForm","initialValues","onSubmit","actions","Error","style","color","INITIALIZED_SUCCESS","initialized","appReducer","App","initializeApp","render","MessengerContainer","UsersContainer","app","promise","Promise","all","reducers","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById"],"mappings":"0FACAA,EAAOC,QAAU,CAAC,KAAO,sBAAsB,KAAO,sBAAsB,OAAS,0B,mBCArFD,EAAOC,QAAU,CAAC,MAAQ,oBAAoB,KAAO,mBAAmB,IAAM,kBAAkB,UAAY,wBAAwB,MAAQ,oBAAoB,KAAO,mBAAmB,QAAU,sBAAsB,MAAQ,sB,mBCAlOD,EAAOC,QAAU,CAAC,MAAQ,yBAAyB,MAAQ,yBAAyB,OAAS,0BAA0B,QAAU,2BAA2B,KAAO,wBAAwB,SAAW,8B,mBCAtMD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,KAAO,oBAAoB,WAAa,0BAA0B,MAAQ,qBAAqB,IAAM,mBAAmB,WAAa,0BAA0B,iBAAmB,kC,mBCAjOD,EAAOC,QAAU,CAAC,KAAO,qBAAqB,IAAM,oBAAoB,MAAQ,sBAAsB,KAAO,qBAAqB,WAAa,2BAA2B,KAAO,uB,mBCAjLD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,WAAa,4BAA4B,MAAQ,yB,mBCApLD,EAAOC,QAAU,CAAC,UAAY,+B,4MCIf,SAASC,IACpB,OACI,8BACI,qBAAIC,UAAWC,IAAEC,KAAjB,UAEI,cAAC,IAAD,CAASC,GAAG,WAAWC,gBAAiBH,IAAEI,OAA1C,SACI,qBAAIL,UAAWC,IAAEK,KAAjB,UACI,qBAAKN,UAAWC,IAAEM,KAAMC,IAAI,mBAAmBC,IAAI,SADvD,kBAOJ,cAAC,IAAD,CAASN,GAAG,QAAQC,gBAAiBH,IAAEI,OAAvC,SACI,qBAAIL,UAAWC,IAAEK,KAAjB,UACI,qBAAKN,UAAWC,IAAEM,KAAMC,IAAI,mBAAmBC,IAAI,SADvD,YAMJ,cAAC,IAAD,CAASN,GAAG,YAAYC,gBAAiBH,IAAEI,OAA3C,SACI,qBAAIL,UAAWC,IAAEK,KAAjB,UACI,qBAAKN,UAAWC,IAAEM,KAAMC,IAAI,sBAAsBC,IAAI,SAD1D,iBAMJ,cAAC,IAAD,CAASN,GAAG,SAASC,gBAAiBH,IAAEI,OAAxC,SACI,qBAAIL,UAAWC,IAAEK,KAAjB,UACI,qBAAKN,UAAWC,IAAEM,KAAMC,IAAI,sBAAsBC,IAAI,SAD1D,kB,kCCjCdC,EAAW,WACXC,EAAuB,uBACzBC,EAAe,CACfC,MAAO,CACH,CACIC,GAAI,EACJC,QAAS,QACTC,MAAO,IAEX,CACIF,GAAI,EACJC,QAAS,gBACTC,MAAO,IAEX,CACIF,GAAI,EACJC,QAAS,YACTC,MAAO,IAGfC,YAAa,IAuBFC,EArBK,WAAmC,IAAlCC,EAAiC,uDAAzBP,EAAcQ,EAAW,uCAClD,OAAQA,EAAOC,MACX,KAAKX,EACD,IAAIO,EAAcE,EAAMF,YACxB,OAAO,2BACAE,GADP,IAEIN,MAAM,GAAD,mBAAMM,EAAMN,OAAZ,CAAmB,CAACC,GAAI,EAAGC,QAASE,KACzCA,YAAa,KAErB,KAAKN,EACD,OAAO,2BACAQ,GADP,IAEIF,YAAaG,EAAOE,UAE5B,QACI,OAAOH,I,iBCjCJ,SAASI,EAAKC,GAGzB,OACI,sBAAKxB,UAAWC,IAAEY,MAAlB,UACI,qBAAKb,UAAWC,IAAEwB,QAAlB,SACA,mBAAGzB,UAAWC,IAAEyB,KAAhB,SAAuBF,EAAMT,YAE7B,qBAAKf,UAAWC,IAAEe,MAAlB,SAA0BQ,EAAMR,WCR5C,IAAIW,EAA6B,SAACR,GAAD,MAAW,CACxCS,OAAQT,EAAMU,KAAKD,SAGVE,EAAmB,SAACC,GAAe,IACtCC,EADqC,4JAEvC,WACI,OAAIC,KAAKT,MAAMI,OAER,cAACG,EAAD,eAAeE,KAAKT,QAFG,cAAC,IAAD,CAAUrB,GAAG,eAHR,GACX+B,IAAMH,WAStC,OAD0BI,YAAQR,EAARQ,CAAoCH,ICqCnDI,cACXD,aAlBkB,SAAChB,GACnB,MAAO,CACHN,MAAOM,EAAMkB,SAASxB,MACtBI,YAAaE,EAAMkB,SAASpB,gBAIX,SAACqB,GACtB,MAAO,CACHC,QAAS,WACLD,EHP+B,CAAEjB,KAAMX,KGS3C8B,kBAAmB,SAACd,GAChBY,EHTkC,SAACZ,GAAD,MAAW,CAAEL,KAAMV,EAAsBW,QAASI,GGS3Ee,CAA+Bf,SAMhDI,EAFWM,EC/CA,SAAcZ,GACzB,IAAIkB,EAASlB,EAAMX,MAAM8B,KAAI,SAAAC,GACzB,OAAO,cAACrB,EAAD,CAAMR,QAAS6B,EAAE7B,QAAoBC,MAAO4B,EAAE5B,OAAf4B,EAAE9B,OAGxC+B,EAAYX,IAAMY,YAStB,OACI,sBAAK9C,UAAWC,IAAE8C,MAAlB,UACI,sBAAK/C,UAAWC,IAAE+C,KAAlB,UACI,sBAAKhD,UAAWC,IAAEgD,IAAlB,UACI,0BAAUC,SARP,WACf,IAAIxB,EAAOmB,EAAUM,QAAQC,MAC7B5B,EAAMgB,kBAAkBd,IAMsB2B,KAAK,GAAGC,IAAKT,EAAWO,MAAO5B,EAAMP,YAAcsC,YAAY,gBAEjG,wBAAQC,QAdV,WACVhC,EAAMe,WAaM,qBAEHG,KAEL,qBAAK1C,UAAWC,IAAEwD,UAAlB,0BC3BG,SAASC,IACpB,OACI,8BACI,cAACC,EAAD,MCPZ,IAAMC,EAA0B,0BAC1BC,EAAmB,mBAErBjD,EAAe,CACfkD,MAAO,CACH,CACIhD,GAAI,EACJuC,KAAM,UAEV,CACIvC,GAAI,EACJuC,KAAM,QAEV,CACIvC,GAAI,EACJuC,KAAM,SAEV,CACIvC,GAAI,EACJuC,KAAM,UAGdU,SAAU,CACN,CACIjD,GAAI,EACJC,QAAS,SAEb,CACID,GAAI,EACJC,QAAS,YAEb,CACID,GAAI,EACJC,QAAS,QAEb,CACID,GAAI,EACJC,QAAS,UAGjBiD,eAAgB,IAmCLC,EAjCU,WAAmC,IAAlC9C,EAAiC,uDAAzBP,EAAcQ,EAAW,uCACvD,OAAQA,EAAOC,MACX,KAAKwC,EACD,IAAIG,EAAiB7C,EAAM6C,eAC3B,OAAO,2BACA7C,GADP,IAEI4C,SAAS,GAAD,mBAAM5C,EAAM4C,UAAZ,CAAsB,CAAEjD,GAAI,EAAGC,QAASiD,KAChDA,eAAgB,KAYxB,KAAKJ,EACD,OAAO,2BACAzC,GADP,IAEI6C,eAAgB5C,EAAOE,UAK/B,QACI,OAAOH,I,iBClEJ,SAAS+C,EAAQ1C,GAC5B,OAEQ,mBAAGxB,UAAWC,IAAEyB,KAAhB,SAAuBF,EAAMT,UCD1B,SAASoD,EAAe3C,GACnC,IAAI4C,EAAO,aAAe5C,EAAMV,GAChC,OACQ,cAAC,IAAD,CAASX,GAAIiE,EAAMhE,gBAAiBH,IAAEI,OAAtC,SAA+CmB,EAAM6B,OCDjE,IAmBejB,cACXD,aApBkB,SAAChB,GACnB,MAAO,CACH2C,MAAO3C,EAAMkD,cAAcP,MAC3BC,SAAU5C,EAAMkD,cAAcN,SAC9BC,eAAgB7C,EAAMkD,cAAcL,mBAInB,SAAC1B,GACtB,MAAO,CACHgC,WAAY,WACRhC,EHsDkC,CAAEjB,KAAMwC,KGpD9CU,qBAAsB,SAAC7C,GACnBY,EHoDqC,SAACZ,GAAD,MAAW,CAAEL,KAAMuC,EAAyBtC,QAASI,GGpDjF8C,CAAkC9C,SAOnDI,EAFWM,EClBA,SAAmBZ,GAC9B,IAAIiD,EAAUjD,EAAMsC,MAAMnB,KAAI,SAAA+B,GAAO,OAAO,cAACP,EAAD,CAAgBrD,GAAI4D,EAAE5D,GAAeuC,KAAMqB,EAAErB,MAAdqB,EAAE5D,OACzE6D,EAAWnD,EAAMuC,SAASpB,KAAI,SAAAiC,GAAO,OAAO,cAACV,EAAD,CAASpD,GAAI8D,EAAE9D,GAAeC,QAAS6D,EAAE7D,SAAjB6D,EAAE9D,OAU1E,OACI,sBAAKd,UAAWC,IAAE8C,MAAlB,UACI,qBAAK/C,UAAWC,IAAE6D,MAAlB,SACKW,IAGL,sBAAKzE,UAAWC,IAAEc,QAAlB,UACK4D,EACD,sBAAK3E,UAAWC,IAAE4E,SAAlB,UACI,0BAAUxB,KAAK,GAAGH,SAdZ,SAAC4B,GACnB,IAAIpD,EAAOoD,EAAEC,OAAO3B,MACpB5B,EAAM+C,qBAAqB7C,IAY8B0B,MAAO5B,EAAMwC,eAAgBT,YAAY,QAGtF,wBAAQC,QApBP,WACbhC,EAAM8C,4B,+BCdDU,EAAsB,SAACC,EAAOC,EAAQC,EAAaC,GAC5D,OAAOH,EAAMtC,KAAI,SAAA+B,GACb,OAAGA,EAAES,KAAiBD,EACX,2BAAIR,GAAMU,GAEdV,M,QCFTW,E,OAAWC,EAAMC,OAAO,CAC1BC,iBAAiB,EACjBC,QAAS,gDACTC,QAAS,CACL,UAAW,0CAKNC,EAAW,CACpBC,SADoB,SACXC,EAAaC,GAClB,OAAOT,EAASU,IAAT,qBAA2BF,EAA3B,kBAAgDC,IAAYE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAEjGC,OAJoB,SAIbrF,GACH,OAAOuE,EAASe,KAAK,UAAYtF,GAAIkF,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAEnEG,SAPoB,SAOXvF,GACL,OAAOuE,EAASiB,OAAO,UAAYxF,GAAIkF,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAK5DK,EAAa,SACXzF,GACP,OAAOuE,EAASU,IAAI,WAAajF,GAAIkF,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAF1DK,EAAa,SAIZzF,GACN,OAAOuE,EAASU,IAAI,kBAAoBjF,IALnCyF,EAAa,SAOTC,GACT,OAAOnB,EAASoB,IAAT,kBAAgC,CAACD,OAAQA,KAK3CE,EAAU,WAEf,OAAOrB,EAASU,IAAT,WAAwBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAFpDQ,EAAU,SAIbC,EAAOC,EAAUC,GACnB,OAAOxB,EAASe,KAAT,aAA4B,CAACO,QAAOC,WAAUC,cALhDH,GAAU,WAQf,OAAOrB,EAASiB,OAAT,eC3CTQ,GAAS,SACTC,GAAW,WACXC,GAAY,YACZC,GAAmB,mBACnBC,GAAwB,wBACxBC,GAAqB,qBACrBC,GAA+B,+BACjCxG,GAAe,CACfkD,MAAO,GACPgC,SAAU,GACVuB,gBAAiB,IACjBxB,YAAa,EACbyB,YAAY,EACZC,oBAAqB,IAiCZC,GAAgB,SAACC,GAAD,MAAa,CAAEpG,KAAMyF,GAAQW,WAC7CC,GAAkB,SAACD,GAAD,MAAa,CAAEpG,KAAM0F,GAAUU,WACjDE,GAAW,SAAC7D,GAAD,MAAY,CAAEzC,KAAM2F,GAAWlD,UAE1C8D,GAAqB,SAACC,GAAD,MAAgB,CAAExG,KAAM6F,GAAuBW,cACpEC,GAAmB,SAACR,GAAD,MAAiB,CAAEjG,KAAM8F,GAAoBG,eAChES,GAA4B,SAACR,EAAqBE,GAAtB,MAAkC,CAAEpG,KAAM+F,GAA8BG,sBAAqBE,WAyBhIO,GAAkB,uCAAG,WAAO1F,EAAUmF,EAAQQ,EAAWC,GAApC,SAAAC,EAAA,6DACvB7F,EAASyF,IAA0B,EAAMN,IADlB,SAEJQ,EAAUR,GAFN,OAGC,IAHD,OAGdW,YACL9F,EAAS4F,EAAcT,IAE3BnF,EAASyF,IAA0B,EAAON,IANnB,2CAAH,4DAqBTY,GAnFM,WAAmC,IAAlClH,EAAiC,uDAAzBP,GAAcQ,EAAW,uCACnD,OAAQA,EAAOC,MACX,KAAKyF,GACD,OAAO,2BACA3F,GADP,IAEI2C,MAAOkB,EAAoB7D,EAAM2C,MAAO1C,EAAOqG,OAAQ,KAAM,CAACa,UAAU,MAEhF,KAAKvB,GACD,OAAO,2BACA5F,GADP,IAEI2C,MAAOkB,EAAoB7D,EAAM2C,MAAO1C,EAAOqG,OAAQ,KAAM,CAACa,UAAU,MAEhF,KAAKtB,GACD,OAAO,2BAAK7F,GAAZ,IAAmB2C,MAAM,YAAK1C,EAAO0C,SACzC,KAAKmD,GACD,OAAO,2BAAK9F,GAAZ,IAAmB0E,YAAazE,EAAOyE,cAC3C,KAAKqB,GACD,OAAO,2BAAK/F,GAAZ,IAAmBkG,gBAAiBjG,EAAOyG,YAC/C,KAAKV,GACD,OAAO,2BAAKhG,GAAZ,IAAmBmG,WAAYlG,EAAOkG,aAC1C,KAAKF,GACD,OAAO,2BACAjG,GADP,IAEIoG,oBAAqBnG,EAAOmG,oBAAP,sBACXpG,EAAMoG,qBADK,CACgBnG,EAAOqG,SACtC,CAACtG,EAAMoG,oBAAoBgB,QAAO,SAAAzH,GAAE,OAAIA,IAAOM,EAAOqG,aAEpE,QACI,OAAOtG,I,oBC1CJ,SAASqH,GAAMhH,GAK1B,IAHA,IAAIiH,EAAaC,KAAKC,KAAKnH,EAAM6F,gBAAkB7F,EAAMsE,UAErD8C,EAAQ,GACHC,EAAI,EAAGA,GAAKJ,EAAYI,IAC7BD,EAAME,KAAKD,GAIf,OACI,gCACI,qBAAK7I,UAAWC,KAAE8I,WAAlB,SACKH,EAAMjG,KAAI,SAAAC,GACP,OAAO,sBAAM5C,UAAWwB,EAAMqE,cAAgBjD,GAAK3C,KAAE+I,iBAAkBxF,QAAS,SAACyF,GAAYzH,EAAM0H,cAActG,IAA1G,SAAiHA,SAGhI,qBAAK5C,UAAWC,KAAE6D,MAAlB,SAEQtC,EAAMsC,MAAMnB,KAAI,SAAA+B,GACZ,OACI,sBAAK1E,UAAWC,KAAEkJ,KAAlB,UACI,cAAC,IAAD,CAAShJ,GAAI,YAAcuE,EAAE5D,GAA7B,SACI,qBAAKN,IAAuB,MAAlBkE,EAAE0E,OAAOC,MAAgB3E,EAAE0E,OAAOC,MAAQ,sBAChD5I,IAAI,QAAQT,UAAWC,KAAEqJ,UAEjC,oBAAItJ,UAAWC,KAAEsJ,WAAjB,SAA8B7E,EAAErB,OAC/BqB,EAAE4D,SACC,wBAAQkB,SAAUhI,EAAM+F,oBAAoBkC,MAAK,SAAA3I,GAAE,OAAIA,IAAO4D,EAAE5D,MAC5D0C,QAAS,WAAShC,EAAMkI,SAAShF,EAAE5D,KAAOd,UAAWC,KAAE0J,IAD3D,sBAGA,wBAAQH,SAAUhI,EAAM+F,oBAAoBkC,MAAK,SAAA3I,GAAE,OAAIA,IAAO4D,EAAE5D,MAC5D0C,QAAS,WAAQhC,EAAMoI,OAAOlF,EAAE5D,KAAOd,UAAWC,KAAE0J,IADxD,0BAVqBjF,EAAE5D,Y,wBCtB5C,SAAS+I,KACpB,OACI,8BACI,qBAAK7J,UAAWC,KAAE6J,UAAWtJ,IAAI,4BCNtC,IAAMuJ,GAAY,SAAC5I,GACtB,OAAOA,EAAM6I,UAAUlG,OAEdmG,GAAc,SAAC9I,GACxB,OAAOA,EAAM6I,UAAUlE,UAEdoE,GAAqB,SAAC/I,GAC/B,OAAOA,EAAM6I,UAAU3C,iBAEd8C,GAAiB,SAAChJ,GAC3B,OAAOA,EAAM6I,UAAUnE,aAEduE,GAAgB,SAACjJ,GAC1B,OAAOA,EAAM6I,UAAU1C,YAEd+C,GAAyB,SAAClJ,GACnC,OAAOA,EAAM6I,UAAUzC,qBCRrB+C,G,4MAYFpB,cAAgB,SAACqB,GACb,EAAK/I,MAAMgJ,WAAWD,EAAY,EAAK/I,MAAMsE,W,uDAXjD,WACI7D,KAAKT,MAAMoE,SAAS3D,KAAKT,MAAMqE,YAAa5D,KAAKT,MAAMsE,Y,oBAa3D,WAAU,IAAD,EACL,OAAO,qCACF7D,KAAKT,MAAM8F,WAAa,cAACuC,GAAD,IAAgB,KAEzC,cAACrB,IAAD,GAAOU,cAAejH,KAAKiH,cACvBrD,YAAa5D,KAAKT,MAAMqE,YACxBwB,gBAAiBpF,KAAKT,MAAM6F,gBAC5BvB,SAAU7D,KAAKT,MAAMsE,UAHzB,4BAIiB7D,KAAKT,MAAMqE,aAJ5B,sBAKW5D,KAAKT,MAAMsC,OALtB,0CAM+B7B,KAAKT,MAAMuG,2BAN1C,oCAOyB9F,KAAKT,MAAM+F,qBAPpC,uBAQYtF,KAAKT,MAAMoI,QARvB,yBASc3H,KAAKT,MAAMkI,UATzB,W,GApBoBxH,IAAMH,WAiFvBK,eACXD,aApCkB,SAAChB,GACnB,MAAO,CACH2C,MAAOiG,GAAU5I,GACjB2E,SAAUmE,GAAY9I,GACtBkG,gBAAiB6C,GAAmB/I,GACpC0E,YAAasE,GAAehJ,GAC5BmG,WAAY8C,GAAcjJ,GAC1BoG,oBAAqB8C,GAAuBlJ,MA6BvB,CAAEqG,iBAAeE,mBAAiBkC,OJDzC,SAACnC,GACnB,8CAAO,WAAOnF,GAAP,SAAA6F,EAAA,sDACHH,GAAmB1F,EAAUmF,EAAQ9B,EAASQ,OAAOsE,KAAK9E,GAAW6B,IADlE,2CAAP,uDIAmEkC,SJI/C,SAACjC,GACrB,8CAAO,WAAOnF,GAAP,SAAA6F,EAAA,sDACHH,GAAmB1F,EAAUmF,EAAQ9B,EAASU,SAASoE,KAAK9E,GAAW+B,IADpE,2CAAP,uDIL6EK,6BAA2BnC,SJ/BpF,SAACC,EAAaC,GAClC,8CAAO,WAAOxD,GAAP,eAAA6F,EAAA,6DACH7F,EAASwF,IAAiB,IADvB,SAEgBnC,EAASC,SAASC,EAAaC,GAF/C,OAEGI,EAFH,OAGH5D,EAASwF,IAAiB,IAC1BxF,EAASqF,GAASzB,EAAKjB,QACvB3C,EAASsF,GAAmB1B,EAAKwE,aAL9B,2CAAP,uDI8BkHF,WJrB5F,SAACD,EAAYzE,GACnC,8CAAO,WAAOxD,GAAP,eAAA6F,EAAA,6DACH7F,EAASwF,IAAiB,IAC1BxF,EApBwC,CAAEjB,KAAM4F,GAAkBpB,YAoB1C0E,IAFrB,SAGgB5E,EAASC,SAAS2E,EAAYzE,GAH9C,OAGGI,EAHH,OAIH5D,EAASwF,IAAiB,IAC1BxF,EAASqF,GAASzB,EAAKjB,QACvB3C,EAASsF,GAAmB1B,EAAKwE,aAN9B,2CAAP,yDImBWtI,CAEbkI,I,oBCvFa,SAASK,GAAQnJ,GAE5B,OAAIA,EAAMoJ,QAMN,sBAAK5K,UAAWC,KAAE4K,QAAlB,UACI,qBAAK7K,UAAWC,KAAE6K,aAAlB,SACI,qBAAK9K,UAAWC,KAAE8K,OAAQvK,IAAmC,MAA9BgB,EAAMoJ,QAAQxB,OAAO4B,MAAgBxJ,EAAMoJ,QAAQxB,OAAO4B,MAAQ,0BAA2BvK,IAAI,gBAEpI,sBAAKT,UAAWC,KAAEgL,WAAlB,UACI,oBAAIjL,UAAWC,KAAEiL,MAAjB,SACC1J,EAAMoJ,QAAQO,WAEf,+BACK3J,EAAMoJ,QAAQQ,gBAdpB,cAACvB,GAAD,ICLf,IAAMwB,GAAmB,mBACnBC,GAAa,aACf1K,GAAe,CACfgK,QAAS,KACTpE,OAAQ,IAiBN+E,GAAgB,SAAC/E,GAAD,MAAa,CAAEnF,KAAMiK,GAAY9E,WAmBxCgF,GAlCQ,WAAmC,IAAlCrK,EAAiC,uDAAzBP,GAAcQ,EAAW,uCACrD,OAAQA,EAAOC,MACX,KAAKgK,GACD,OAAO,2BAAKlK,GAAZ,IAAmByJ,QAASxJ,EAAOwJ,UACvC,KAAKU,GACD,OAAO,2BACAnK,GADP,IAEIqF,OAAQpF,EAAOoF,SAEvB,QACI,OAAOrF,I,SCmCJsK,GAnDW,SAACjK,GACvB,MAA8BkK,oBAAS,GAAvC,oBAAKC,EAAL,KAAeC,EAAf,KACA,EAA0BF,mBAASlK,EAAMgF,QAAzC,oBAAKA,EAAL,KAAaqF,EAAb,KAGAC,qBAAU,WACND,EAAUrK,EAAMgF,UACjB,CAAChF,EAAMgF,SAuBV,OACI,gCACI,+BAEMmF,GACE,sBAAMnI,QAdC,WACnBoI,GAAY,IAaA,SAAkCpK,EAAMgF,QAAU,gBAI1D,8BACKmF,GACG,uBAAOI,WAAW,EAAMC,OAzBf,WACrBJ,GAAY,GACZpK,EAAMyK,aAAazF,IAwBHtD,SAjBC,SAAC4B,GAClB+G,EAAU/G,EAAEoH,cAAc9I,QAgBgBA,MAAOoD,UCnCnD2F,G,uKACF,WACI,IAAI1E,EAASxF,KAAKT,MAAM4K,MAAMC,OAAO5E,OAEhCA,IACDA,EAASxF,KAAKT,MAAM8K,mBAEhBrK,KAAKT,MAAM+K,QAAQzD,KAAK,UAGhC7G,KAAKT,MAAMgL,eAAe/E,GAC1BxF,KAAKT,MAAMiL,cAAchF,K,oBAG7B,WACI,OACI,gCACI,cAACkD,GAAD,2BAAa1I,KAAKT,OAAlB,IAAyBoJ,QAAS3I,KAAKT,MAAMoJ,WAC7C,cAAC,GAAD,CAAmBpE,OAAQvE,KAAKT,MAAMgF,OAAQyF,aAAchK,KAAKT,MAAMkL,0B,GAlBxDxK,IAAMH,WAiCtBK,eAEPD,aAXc,SAAChB,GACnB,MAAO,CACHyJ,QAASzJ,EAAMwL,YAAY/B,QAC3BpE,OAAQrF,EAAMwL,YAAYnG,OAC1B8F,iBAAkBnL,EAAMU,KAAK4F,UAOJ,CAAE+E,eFlBL,SAAC/E,GAAD,8CAAY,WAAOnF,GAAP,eAAA6F,EAAA,sEACnB5B,EAAsBkB,GADH,OAChCvB,EADgC,OAEtC5D,EANiC,CAAEjB,KAAMgK,GAAkBT,QAMnC1E,IAFc,2CAAZ,uDEkBqBuG,cFdtB,SAAChF,GAAD,8CAAY,WAAOnF,GAAP,eAAA6F,EAAA,sEACd5B,EAAqBkB,GADP,OAC/BxB,EAD+B,OAErC3D,EAASiJ,GAActF,EAASC,OAFK,2CAAZ,uDEcqCwG,iBFVlC,SAAClG,GAAD,8CAAY,WAAOlE,GAAP,SAAA6F,EAAA,sEACjB5B,EAAwBC,GADP,OAEP,IAFO,OAE3BN,KAAKkC,YACd9F,EAASiJ,GAAc/E,IAHa,2CAAZ,yDEWxBoG,IACA9K,EAJOM,CAMV+J,I,oBC1CU,SAASU,GAAOrL,GAC3B,OACI,qBAAKxB,UAAWC,KAAE6M,KAAlB,SACI,sBAAK9M,UAAU,YAAf,UACI,sBAAKA,UAAWC,KAAE8M,IAAlB,UACI,qBAAK/M,UAAWC,KAAE+M,KAAMxM,IAAI,mBAAmBC,IAAI,SACnD,oBAAIT,UAAWC,KAAEiL,MAAjB,kCAEJ,qBAAKlL,UAAWC,KAAEgN,WAAlB,SACKzL,EAAMI,QAAU,gCAAK,uBAAM5B,UAAWC,KAAEiN,KAAnB,UAA0B1L,EAAM2L,MAAhC,OACd,wBAAQ3J,QAAShC,EAAM4L,OAAvB,6BCd5B,IAAMC,GAAgB,gBAChBC,GAAgB,gBAClB1M,GAAe,CACf6G,OAAQ,KACRd,MAAO,KACPwG,MAAO,KACPvL,QAAQ,EACR2L,aAAc,MAYLC,GAAkB,SAAC7G,EAAOc,EAAQ0F,EAAOvL,GAAvB,MAAmC,CAAEP,KAAMgM,GAAenH,KAAM,CAAES,QAAOc,SAAQ0F,QAAOvL,YAG1G6L,GAAkB,yDAAM,WAAOnL,GAAP,uBAAA6F,EAAA,sEACdzB,IADc,OAET,KADlBR,EAD2B,QAExBkC,aAAmB,EACGlC,EAAKA,KAA1BS,EADiB,EACjBA,MAAO7F,EADU,EACVA,GAAIqM,EADM,EACNA,MACjB7K,EAASkL,GAAgB7G,EAAO7F,EAAIqM,GAAO,KAJd,2CAAN,uDAyBhBO,GAtCK,WAAmC,IAAlCvM,EAAiC,uDAAzBP,GAAcQ,EAAW,uCAClD,OAAQA,EAAOC,MACX,KAAKgM,GACD,OAAO,uCAAKlM,GAAUC,EAAO8E,MAA7B,IAAmCtE,OAAQR,EAAO8E,KAAKtE,SAC3D,KAAK0L,GACD,OAAO,2BAAKnM,GAAZ,IAAmBoM,aAAcnM,EAAOmM,eAC5C,QACI,OAAOpM,ICYJgB,gBALS,SAAChB,GAAD,MAAY,CAChCS,OAAQT,EAAMU,KAAKD,OACnBuL,MAAOhM,EAAMU,KAAKsL,SAGkB,CAAEM,mBAAiBL,ODUrC,yDAAM,WAAO9K,GAAP,SAAA6F,EAAA,sEACDzB,KADC,OAES,IAFT,OAEXR,KAAKkC,YACd9F,EAASkL,GAAgB,KAAM,KAAM,MAAM,IAHvB,2CAAN,wDCVPrL,EAbS,SAACX,GAKrB,OAJAsK,qBAAU,WACNtK,EAAMiM,oBAEP,IACI,cAACZ,GAAD,eAAYrL,O,SCCjBmM,GAAY,SAACnM,GACf,OACI,cAAC,KAAD,CACIoM,cAAe,CAAEjH,MAAO,GAAIC,SAAU,GAAIC,SAAU,IACpDgH,SAAU,SAAC3H,EAAM4H,GACFtM,EAAM2L,MAAMjH,EAAKS,MAAOT,EAAKU,SAAUV,EAAKW,SAAUiH,EAAQjC,YAHjF,SASQ,eAAC,KAAD,WACI,cAAC,KAAD,CAAOxK,KAAK,OAAOgC,KAAK,UACxB,cAAC,KAAD,CAAOhC,KAAK,WAAWgC,KAAK,aAC5B,cAAC,KAAD,CAAOhC,KAAK,WAAWgC,KAAK,aAC5B,wBAAQhC,KAAK,iBAO3B0M,GAAQ,WACV,OACI,8BACI,oBAAIC,MAAO,CAACC,MAAO,OAAnB,wCAUG9L,gBALS,SAAChB,GAAD,MAAY,CAChCS,OAAQT,EAAMU,KAAKD,OACnB2L,aAAcpM,EAAMU,KAAK0L,gBAGW,CAAEJ,MF1BrB,SAACxG,EAAOC,EAAUC,EAAUgF,GAA5B,8CAA0C,WAAOvJ,GAAP,eAAA6F,EAAA,sEACpCzB,EAAcC,EAAOC,EAAUC,EAAUgF,GADL,OAE1B,KAD3B5F,EADqD,QAE9CC,KAAKkC,WACd9F,EAASmL,MAC2B,IAA7BxH,EAASC,KAAKkC,YACrB9F,EAf0C,CAAEjB,KAAMiM,GAAeC,cAexC,IAL8B,2CAA1C,wDE0BNpL,EAnDD,SAACX,GACX,OAAIA,EAAMI,OACC,cAAC,IAAD,CAAUzB,GAAI,aAIrB,gCACI,8BACI,6CAEJ,cAAC,GAAD,CAAWgN,MAAO3L,EAAM2L,QACvB3L,EAAM+L,cAAgB,cAAC,GAAD,UChB7BW,GAAsB,sBAExBtN,GAAe,CACfuN,aAAa,GAoBFC,GAlBI,WAAmC,IAAlCjN,EAAiC,uDAAzBP,GAAcQ,EAAW,uCACjD,OAAQA,EAAOC,MACX,KAAK6M,GACD,OAAO,2BAAK/M,GAAZ,IAAmBgN,YAAa/M,EAAO+M,cAC3C,QACI,OAAOhN,ICKbkN,G,uKAEF,WACIpM,KAAKT,MAAM8M,kB,oBAGf,WACI,OAAKrM,KAAKT,MAAM2M,YAIZ,gCACI,cAAC,GAAD,IACA,sBAAKnO,UAAU,YAAf,UACI,cAACD,EAAD,IACA,cAAC,IAAD,CAAOqE,KAAK,oBAAoBmK,OAAQ,kBAAM,cAAC,GAAD,OAE9C,cAAC,IAAD,CAAOnK,KAAK,QAAQmK,OAAQ,kBAAM,cAAC7K,EAAD,OAElC,cAAC,IAAD,CAAOU,KAAK,YAAYmK,OAAQ,kBAAM,cAACC,EAAD,OAEtC,cAAC,IAAD,CAAOpK,KAAK,SAASmK,OAAQ,kBAAM,cAACE,GAAD,OAEnC,cAAC,IAAD,CAAOrK,KAAK,SAASmK,OAAQ,kBAAM,cAAC,GAAD,aAfpC,cAAC1E,GAAD,Q,GARD9H,aAkCHK,eACXwK,IACAzK,aANoB,SAAChB,GAAD,MAAY,CAChCgN,YAAahN,EAAMuN,IAAIP,eAKE,CAAEG,cDpCF,yDAAM,WAAOhM,GAAP,eAAA6F,EAAA,sEACX7F,EAASmL,MADE,OAC3BkB,EAD2B,OAE/BC,QAAQC,IAAI,CAACF,IACbrM,EALgD,CAAEjB,KAAM6M,GAAqBC,aAKjD,IAHG,2CAAN,yDCkCd/L,CAEkCiM,I,SC5C7CS,GAAWC,YAAgB,CAC3B1M,SAAUnB,EACVmD,cAAeJ,EACf+F,UAAW3B,GACXsE,YAAanB,GACb3J,KAAM6L,GACNgB,IAAKN,KAGHY,GAAmBC,OAAOC,sCAAwC9M,IAIzD+M,GAHDC,YAAYN,GAAUE,GAAiBK,YAAgBC,QCRrEC,IAAShB,OACL,cAAC,IAAD,UACI,cAAC,IAAD,CAAUY,MAAOA,GAAjB,SACI,cAAC,GAAD,QAEUK,SAASC,eAAe,W","file":"static/js/main.ac7b5972.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"sidebar_menu__3Wdjy\",\"list\":\"sidebar_list__1_ao5\",\"active\":\"sidebar_active__2BDas\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"news_block__1yfR_\",\"news\":\"news_news__17yaU\",\"add\":\"news_add__Y63nM\",\"rightside\":\"news_rightside__gUOGt\",\"posts\":\"news_posts__2jOx8\",\"text\":\"news_text__3o99Y\",\"content\":\"news_content__13zyP\",\"likes\":\"news_likes__3lunR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"messenger_block__3xmRT\",\"users\":\"messenger_users__AObex\",\"active\":\"messenger_active__cwuQb\",\"message\":\"messenger_message__3DTla\",\"text\":\"messenger_text__1IPpU\",\"textarea\":\"messenger_textarea__1Dx3P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"users_users__1Z6sU\",\"user\":\"users_user__3JsnY\",\"user__name\":\"users_user__name__r9-aI\",\"photo\":\"users_photo__YC3Br\",\"btn\":\"users_btn__EiIic\",\"pagenation\":\"users_pagenation__3c5tA\",\"pagenationActive\":\"users_pagenationActive__3xgtw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"head\":\"header_head__1zXDT\",\"row\":\"header_row__gShyI\",\"title\":\"header_title__1QkIo\",\"logo\":\"header_logo__tmmRP\",\"loginBlock\":\"header_loginBlock__3k_Cf\",\"link\":\"header_link__3wGeV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"profile_wrapper__2Skrm\",\"block_avatar\":\"profile_block_avatar__3bQXt\",\"avatar\":\"profile_avatar__1pUQS\",\"block_info\":\"profile_block_info__3vPxf\",\"title\":\"profile_title__3pYk5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"preloader_preloader__1SOTK\"};","import React from 'react'\r\nimport s from './sidebar.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n\r\nexport default function Sidebar() {\r\n    return (\r\n        <div>\r\n            <ul className={s.menu}>\r\n\r\n                <NavLink to=\"/Profile\" activeClassName={s.active}>\r\n                    <li className={s.list}>\r\n                        <img className={s.icon} src=\"/images/user.svg\" alt=\"Icon\" />\r\n                        My profile\r\n                    </li>\r\n                </NavLink>\r\n\r\n\r\n                <NavLink to=\"/News\" activeClassName={s.active}>\r\n                    <li className={s.list}>\r\n                        <img className={s.icon} src=\"/images/news.svg\" alt=\"Icon\" />\r\n                        News\r\n                    </li>\r\n                </NavLink>\r\n\r\n                <NavLink to=\"/Messages\" activeClassName={s.active}>\r\n                    <li className={s.list}>\r\n                        <img className={s.icon} src=\"/images/comment.svg\" alt=\"Icon\" />\r\n                        Messenger\r\n                    </li>\r\n                </NavLink>\r\n\r\n                <NavLink to=\"/Users\" activeClassName={s.active}>\r\n                    <li className={s.list}>\r\n                        <img className={s.icon} src=\"/images/userAdd.svg\" alt=\"Icon\" />\r\n                        Users\r\n                    </li>\r\n                </NavLink>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n","const ADD_POST = 'ADD-POST';\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\nlet initialStore = {\r\n    posts: [\r\n        {\r\n            id: 1,\r\n            message: 'Great',\r\n            likes: 10\r\n        },\r\n        {\r\n            id: 2,\r\n            message: 'Lorem, ipsum.',\r\n            likes: 15\r\n        },\r\n        {\r\n            id: 3,\r\n            message: 'Sapiente.',\r\n            likes: 5\r\n        }\r\n    ],\r\n    newPostText: ''\r\n}\r\nconst newsReducer = (state = initialStore, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPostText = state.newPostText;\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, {id: 4, message: newPostText}],\r\n                newPostText: ''\r\n            }\r\n        case UPDATE_NEW_POST_TEXT:\r\n            return {\r\n                ...state,\r\n                newPostText: action.newText\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const addPostActionCreator = () => ({ type: ADD_POST })\r\nexport const updateNewPostTextActionCreator = (text) => ({ type: UPDATE_NEW_POST_TEXT, newText: text })\r\n\r\nexport default newsReducer","import React from 'react'\r\nimport s from '../../news.module.css'\r\n\r\n\r\nexport default function Post(props) {\r\n    \r\n\r\n    return (\r\n        <div className={s.posts}>\r\n            <div className={s.content}>\r\n            <p className={s.text}>{props.message}</p>\r\n            </div>\r\n            <div className={s.likes}>{props.likes}</div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = (state) =>({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component  {\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to='/Login'/>\r\n            \r\n            return <Component {...this.props}/>\r\n            \r\n        }\r\n    }\r\n    let ConnectAuthRedirect = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n    return ConnectAuthRedirect\r\n}\r\n   \r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { addPostActionCreator, updateNewPostTextActionCreator } from '../../redux/news-reducer';\r\nimport News from './NewsComp/News';\r\nimport { withAuthRedirect } from './../hoc/withAuthRedirect';\r\n\r\n// export default function NewsContainer(props) {\r\n\r\n\r\n//     return (\r\n//         <StoreContext.Consumer>\r\n//             {\r\n//                 (store) => {\r\n//                     let state = store.getState();\r\n\r\n//                     let addPost = () => {\r\n//                         store.dispatch(addPostActionCreator())\r\n//                     }\r\n\r\n//                     let onPostChange = (text) => {\r\n//                         let action = updateNewPostTextActionCreator(text)\r\n//                         store.dispatch(action);\r\n//                     }\r\n\r\n//                     return <News\r\n//                         updateNewPostText={onPostChange}\r\n//                         addPost={addPost}\r\n//                         posts={state.NewsPage.posts}\r\n//                         newPostText={state.NewsPage.newPostText} />\r\n//                 }\r\n//             }\r\n\r\n//         </StoreContext.Consumer>\r\n//     )\r\n// }\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.NewsPage.posts,\r\n        newPostText: state.NewsPage.newPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: () => {\r\n            dispatch(addPostActionCreator())\r\n        },\r\n        updateNewPostText: (text) => {\r\n            dispatch(updateNewPostTextActionCreator(text))\r\n        }\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(News)\r\n\r\n","import React from 'react'\r\nimport s from '../news.module.css'\r\nimport Post from './post/Post.jsx'\r\n\r\n\r\n\r\n\r\nexport default function News(props) {\r\n    let postEl = props.posts.map(p => {\r\n        return <Post message={p.message} key={p.id} likes={p.likes} />\r\n    })\r\n\r\n    let NewPostEl = React.createRef();\r\n    let addPost = () =>{\r\n        props.addPost()\r\n    }\r\n\r\n    let onPostChange = () =>{\r\n        let text = NewPostEl.current.value;\r\n        props.updateNewPostText(text)\r\n    }\r\n    return (\r\n        <div className={s.block}>\r\n            <div className={s.news}>\r\n                <div className={s.add}>\r\n                    <textarea onChange={onPostChange} name=\"\" ref={NewPostEl} value={props.newPostText}  placeholder=\"Tell me smt\">\r\n                    </textarea>\r\n                    <button onClick={addPost}>post</button>\r\n                </div>\r\n                {postEl}\r\n            </div>\r\n            <div className={s.rightside}>\r\n                gfgfgf\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport NewsContainer from './NewsContainer';\r\n\r\n\r\nexport default function NewsData() {\r\n    return (\r\n        <div>\r\n            <NewsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\n","const UPDATE_NEW_MESSAGE_TEXT = 'UPDATE-NEW-MESSAGE-TEXT';\r\nconst ADD_POST_MESSAGE = 'ADD-POST-MESSAGE'\r\n\r\nlet initialStore = {\r\n    users: [\r\n        {\r\n            id: 1,\r\n            name: 'Eugene'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Dima'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Sasha'\r\n        },\r\n        {\r\n            id: 4,\r\n            name: 'Vasya'\r\n        }\r\n    ],\r\n    messages: [\r\n        {\r\n            id: 1,\r\n            message: '21321'\r\n        },\r\n        {\r\n            id: 2,\r\n            message: 'fsdfs123'\r\n        },\r\n        {\r\n            id: 3,\r\n            message: 'gsgs'\r\n        },\r\n        {\r\n            id: 4,\r\n            message: 'vcxvx'\r\n        }\r\n    ],\r\n    newMessageText: '',\r\n}\r\nconst messengerReducer = (state = initialStore, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST_MESSAGE: {\r\n            let newMessageText = state.newMessageText;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, { id: 5, message: newMessageText }],\r\n                newMessageText: ''\r\n            }\r\n\r\n            // let newMessage = {\r\n            //     id: 5,\r\n            //     message: state.newMessageText,\r\n            // }\r\n            // let stateCopy = {...state};\r\n            // stateCopy.messages = [...state.messages];\r\n            // stateCopy.messages.push(newMessage);\r\n            // stateCopy.newMessageText = ''\r\n        }\r\n        case UPDATE_NEW_MESSAGE_TEXT: {\r\n            return {\r\n                ...state,\r\n                newMessageText: action.newText\r\n            }\r\n            // let stateCopy = { ...state }\r\n            // stateCopy.newMessageText = action.newText;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const addMessageActionCreator = () => ({ type: ADD_POST_MESSAGE })\r\nexport const updateNewMessageTextActionCreator = (text) => ({ type: UPDATE_NEW_MESSAGE_TEXT, newText: text })\r\nexport default messengerReducer","import React from 'react'\r\nimport s from '../messenger.module.css'\r\n\r\n\r\nexport default function Message(props){\r\n    return (\r\n        \r\n            <p className={s.text}>{props.message}</p>\r\n        \r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport s from '../messenger.module.css'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\n\r\nexport default function MessengerUsers(props) {\r\n    let path = '/Messages/' + props.id;\r\n    return (\r\n            <NavLink to={path} activeClassName={s.active}>{props.name}</NavLink>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport { addMessageActionCreator, updateNewMessageTextActionCreator } from '../../redux/messenger-reducer'\r\nimport Messenger from './Messenger'\r\nimport { connect } from 'react-redux'\r\nimport { withAuthRedirect } from './../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n// updateNewPostTextActionCreator;\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.MessengerPage.users,\r\n        messages: state.MessengerPage.messages,\r\n        newMessageText: state.MessengerPage.newMessageText,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: () => {\r\n            dispatch(addMessageActionCreator())\r\n        },\r\n        updateNewMessageText: (text) => {\r\n            dispatch(updateNewMessageTextActionCreator(text))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Messenger)\r\n","import React from 'react'\r\nimport s from './messenger.module.css'\r\nimport Message from './Message/Message'\r\nimport MessengerUsers from './MessengerUsers/MessengerUsers'\r\n// updateNewPostTextActionCreator;\r\n\r\n\r\n\r\n\r\nexport default function Messenger(props) {\r\n    let usersEl = props.users.map(u => { return <MessengerUsers id={u.id} key={u.id} name={u.name} /> })\r\n    let Messages = props.messages.map(m => { return <Message id={m.id} key={m.id} message={m.message} /> })\r\n\r\n    let addMessage = () => {\r\n        props.addMessage()\r\n    }\r\n    let onMessageChange = (e) => {\r\n        let text = e.target.value;\r\n        props.updateNewMessageText(text)\r\n    }\r\n\r\n    return (\r\n        <div className={s.block}>\r\n            <div className={s.users}>\r\n                {usersEl}\r\n\r\n            </div>\r\n            <div className={s.message}>\r\n                {Messages}\r\n                <div className={s.textarea}>\r\n                    <textarea name=\"\" onChange={onMessageChange} value={props.newMessageText} placeholder=\"smt\">\r\n\r\n                    </textarea>\r\n                    <button onClick={addMessage}>\r\n\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export const updateObjectInArray = (items, itemID, objPropName, newObjProps) => {\r\n    return items.map(u =>{\r\n        if(u[objPropName] === itemID){\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u\r\n    })\r\n}","import axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': 'c1eaf6da-148d-4a7c-ae40-1fdcc6756cb9'\r\n    }\r\n})\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage, pageSize) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response => response.data)\r\n    },\r\n    Follow(id) {\r\n        return instance.post(`follow/` + id).then(response => response.data)\r\n    },\r\n    unFollow(id) {\r\n        return instance.delete(`follow/` + id).then(response => response.data)\r\n    }\r\n}\r\n\r\n\r\nexport const profileAPI = {\r\n    getProfile(id) {\r\n        return instance.get(`profile/` + id).then(response => response.data)\r\n    },\r\n    getStatus(id) {\r\n        return instance.get(`profile/status/` + id)\r\n    },\r\n    updateStatus(status){\r\n        return instance.put(`profile/status/`, {status: status})\r\n    }\r\n}\r\n\r\n//header\r\nexport const authAPI = {\r\n    getAuth() {\r\n        return instance.get(`auth/me`).then(response => response.data)\r\n    },\r\n    login(email, password, remember) {\r\n        return instance.post(`auth/login`, {email, password, remember})\r\n    },\r\n    logout(){\r\n        return instance.delete(`auth/login`)\r\n    }\r\n}   \r\n","\r\nimport { updateObjectInArray } from '../utils/object-helpers';\r\nimport { usersAPI } from './../api/api';\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_USERS_TOTAL_COUNT = 'SET_USERS_TOTAL_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\nlet initialStore = {\r\n    users: [],\r\n    pageSize: 30,\r\n    totalUsersCount: 200,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n}\r\nconst usersReducer = (state = initialStore, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userID, 'id', {followed: true})\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userID, 'id', {followed: false})\r\n            }\r\n        case SET_USERS:\r\n            return { ...state, users: [...action.users] }\r\n        case SET_CURRENT_PAGE:\r\n            return { ...state, currentPage: action.currentPage }\r\n        case SET_USERS_TOTAL_COUNT:\r\n            return { ...state, totalUsersCount: action.totalPage }\r\n        case TOGGLE_IS_FETCHING:\r\n            return { ...state, isFetching: action.isFetching }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.followingInProgress\r\n                    ? [...state.followingInProgress, action.userID]\r\n                    : [state.followingInProgress.filter(id => id !== action.userID)]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const followSuccess = (userID) => ({ type: FOLLOW, userID })\r\nexport const unfollowSuccess = (userID) => ({ type: UNFOLLOW, userID })\r\nexport const setUsers = (users) => ({ type: SET_USERS, users })\r\nexport const setCurrentPage = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage })\r\nexport const setUsersTotalCount = (totalPage) => ({ type: SET_USERS_TOTAL_COUNT, totalPage })\r\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching })\r\nexport const toggleIsFollowingProgress = (followingInProgress, userID) => ({ type: TOGGLE_IS_FOLLOWING_PROGRESS, followingInProgress, userID })\r\n\r\n\r\n//Thunks\r\nexport const getUsers = (currentPage, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true))\r\n        const data = await usersAPI.getUsers(currentPage, pageSize)\r\n        dispatch(toggleIsFetching(false))\r\n        dispatch(setUsers(data.items))\r\n        dispatch(setUsersTotalCount(data.totalCount))\r\n    }\r\n}\r\n\r\nexport const getPageNum = (pageNumber, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true))\r\n        dispatch(setCurrentPage(pageNumber))\r\n        const data = await usersAPI.getUsers(pageNumber, pageSize)\r\n        dispatch(toggleIsFetching(false))\r\n        dispatch(setUsers(data.items))\r\n        dispatch(setUsersTotalCount(data.totalCount))\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userID, apiMethod, actionCreator) => {\r\n    dispatch(toggleIsFollowingProgress(true, userID))\r\n    const data = await apiMethod(userID)\r\n    if (data.resultCode === 0) {\r\n        dispatch(actionCreator(userID))\r\n    }\r\n    dispatch(toggleIsFollowingProgress(false, userID))\r\n\r\n}\r\nexport const follow = (userID) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userID, usersAPI.Follow.bind(usersAPI), followSuccess)\r\n    }\r\n}\r\nexport const unfollow = (userID) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userID, usersAPI.unFollow.bind(usersAPI), unfollowSuccess)\r\n    }\r\n}\r\n\r\n\r\nexport default usersReducer\r\n\r\n\r\n// props.toggleIsFollowing(true, u.id)\r\n\r\n// usersAPI.Follow(u.id).then(data => {\r\n\r\n//     if (data.resultCode === 0) {\r\n//         props.follow(u.id)\r\n//     }\r\n//     props.toggleIsFollowing(false, u.id)\r\n// });","import React from 'react'\r\nimport s from './users.module.css'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport default function Users(props) {\r\n\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize)\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.pagenation}>\r\n                {pages.map(p => {\r\n                    return <span className={props.currentPage === p && s.pagenationActive} onClick={(event) => { props.onPageChanged(p) }}>{p}</span>\r\n                })}\r\n            </div>\r\n            <div className={s.users}>\r\n                {\r\n                    props.users.map(u => {\r\n                        return (\r\n                            <div className={s.user} key={u.id}>\r\n                                <NavLink to={'/Profile/' + u.id}>\r\n                                    <img src={u.photos.small != null ? u.photos.small : 'images/userPage.svg'}\r\n                                        alt=\"photo\" className={s.photo} />\r\n                                </NavLink>\r\n                                <h4 className={s.user__name}>{u.name}</h4>\r\n                                {u.followed ?\r\n                                    <button disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                        onClick={() => {  props.unfollow(u.id) }} className={s.btn}>followed</button> :\r\n\r\n                                    <button disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                        onClick={() => { props.follow(u.id) }} className={s.btn}>unfollowed</button>}\r\n\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n\r\n        </div >\r\n    )\r\n}\r\n","import React from 'react'\r\nimport s from './preloader.module.css'\r\n\r\nexport default function Preloader() {\r\n    return (\r\n        <div>\r\n            <img className={s.preloader} src='/images/preloader.svg'/>\r\n        </div>\r\n    )   \r\n}\r\n","export const getUsersS = (state) => {\r\n    return state.usersPage.users\r\n}\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n}\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching\r\n}\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress\r\n}","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { followSuccess, unfollowSuccess, toggleIsFollowingProgress, getUsers, getPageNum, follow, unfollow } from './../../redux/users-reducer';\r\nimport Users from './Users';\r\nimport Preloader from '../common/Preloader/Preloader.jsx';\r\nimport { compose } from 'redux';\r\nimport { getCurrentPage, getFollowingInProgress, getIsFetching, getPageSize, getTotalUsersCount, getUsersS } from '../../redux/users-selectors';\r\n\r\nclass UsersAPIComponent extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n        // this.props.toggleIsFetching(true)\r\n        // usersAPI.getUsers(this.props.currentPage, this.props.pageSize).then(data => {\r\n        //     this.props.toggleIsFetching(false)\r\n        //     this.props.setUsers(data.items)\r\n        //     this.props.setUsersTotalCount(data.totalCount)\r\n\r\n        // });\r\n    }\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.getPageNum(pageNumber, this.props.pageSize);\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader /> : null}\r\n\r\n            <Users onPageChanged={this.onPageChanged}\r\n                currentPage={this.props.currentPage}\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                users={this.props.users}\r\n                toggleIsFollowingProgress={this.props.toggleIsFollowingProgress}\r\n                followingInProgress={this.props.followingInProgress}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\n\r\n// let mapStateToProps = (state) => {\r\n//     return {\r\n//         users: state.usersPage.users,\r\n//         pageSize: state.usersPage.pageSize,\r\n//         totalUsersCount: state.usersPage.totalUsersCount,\r\n//         currentPage: state.usersPage.currentPage,\r\n//         isFetching: state.usersPage.isFetching,\r\n//         followingInProgress: state.usersPage.followingInProgress\r\n//     }\r\n// }\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsersS(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\n// let mapDispatchToProps = (dispatch) => {\r\n//     return {\r\n//         follow: (userID) => {\r\n//             dispatch(followAC(userID))\r\n//         },\r\n//         unfollow: (userID) => {\r\n//             dispatch(unfollowAC(userID))\r\n//         },\r\n//         setUsers: (users) => {\r\n//             dispatch(setUsersAC(users))\r\n//         },\r\n//         setCurrentPage: (pageNumber) => {\r\n//             dispatch(setCurrentPageAC(pageNumber))\r\n//         },\r\n//         setUsersTotalCount: (totalCount) => {\r\n//             dispatch(setUsersTotalCountAC(totalCount))\r\n//         },\r\n//         toggleIsFetching: (isFetching) => {\r\n//             dispatch(toggleIsFetchingAC(isFetching))\r\n//         }\r\n//     }\r\n// }\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { followSuccess, unfollowSuccess, follow, unfollow, toggleIsFollowingProgress, getUsers, getPageNum }),\r\n)(UsersAPIComponent)\r\n\r\n","import React from 'react'\r\nimport s from './profile.module.css'\r\nimport Preloader from './../common/Preloader/Preloader';\r\n\r\nexport default function Profile(props) {\r\n\r\n    if(!props.profile){\r\n        return <Preloader/>\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <div className={s.block_avatar}>\r\n                <img className={s.avatar} src={props.profile.photos.large != null ? props.profile.photos.large : '/images/unknow_user.svg'} alt=\"icon user\" />\r\n            </div>\r\n            <div className={s.block_info}>\r\n                <h3 className={s.title}>\r\n                {props.profile.fullName}\r\n                </h3>\r\n                <span>\r\n                    {props.profile.aboutMe}\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { profileAPI } from \"../api/api\";\r\n\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS'\r\nlet initialStore = {\r\n    profile: null,\r\n    status: \"\"\r\n}\r\nconst profileReducer = (state = initialStore, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_PROFILE:\r\n            return { ...state, profile: action.profile }\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst setUserProfile = (profile) => ({ type: SET_USER_PROFILE, profile })\r\nconst setUserStatus = (status) => ({ type: SET_STATUS, status })\r\n\r\n\r\nexport const getUserProfile = (userID) => async (dispatch) => {\r\n    const data = await profileAPI.getProfile(userID)\r\n    dispatch(setUserProfile(data));\r\n}\r\nexport const getUserStatus = (userID) => async (dispatch) => {\r\n    const response = await profileAPI.getStatus(userID)\r\n    dispatch(setUserStatus(response.data));\r\n}\r\nexport const updateUserStatus = (status) => async (dispatch) => {\r\n    const response = await profileAPI.updateStatus(status)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setUserStatus(status));\r\n    }\r\n}\r\n\r\n\r\nexport default profileReducer;","import React, { useEffect, useState } from 'react'\r\n\r\nconst ProfileStatusFunc = (props) => {\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n    // useEffect(() => {\r\n    //     effect\r\n    //     return () => {\r\n    //         cleanup\r\n    //     }\r\n    // }, [input])\r\n\r\n\r\n    let deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    let activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    let onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div >\r\n\r\n                {!editMode &&\r\n                    <span onClick={activateEditMode}>{props.status || '---------'}</span>\r\n                }\r\n\r\n            </div>\r\n            <div>\r\n                {editMode &&\r\n                    <input autoFocus={true} onBlur={deactivateEditMode}\r\n                        onChange={onStatusChange} value={status} />\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default ProfileStatusFunc;","import React from 'react'\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { getUserProfile, getUserStatus, updateUserStatus } from './../../redux/profile-reducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withAuthRedirect } from './../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\nimport ProfileStatusFunc from './ProfileInfo/ProfileStatusFunc';\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userID = this.props.match.params.userID;\r\n        \r\n        if (!userID) {\r\n            userID = this.props.authorizeduserID;\r\n            if(!userID){\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        this.props.getUserProfile(userID);\r\n        this.props.getUserStatus(userID);\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div >\r\n                <Profile {...this.props} profile={this.props.profile} />\r\n                <ProfileStatusFunc status={this.props.status} updateStatus={this.props.updateUserStatus} />\r\n            </div >\r\n        )\r\n    }\r\n\r\n}\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizeduserID: state.auth.userID\r\n    }\r\n}\r\n\r\n\r\nexport default compose\r\n    (\r\n        connect(mapStateToProps, { getUserProfile, getUserStatus, updateUserStatus }),\r\n        withRouter,\r\n        withAuthRedirect\r\n    )\r\n    (ProfileContainer)\r\n\r\n","import React from 'react';\r\nimport s from './header.module.css'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\n\r\nexport default function Header(props) {\r\n    return (\r\n        <div className={s.head}>\r\n            <div className=\"container\">\r\n                <div className={s.row}>\r\n                    <img className={s.logo} src=\"/images/logo.svg\" alt=\"Logo\" />\r\n                    <h2 className={s.title}>My social network</h2>\r\n                </div>\r\n                <div className={s.loginBlock}>\r\n                    {props.isAuth && <div><span className={s.link}>{props.login} </span>\r\n                            <button onClick={props.logout}>Login</button>\r\n                          </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n","\r\nimport { authAPI } from './../api/api';\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\nconst LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nlet initialStore = {\r\n    userID: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    loginSuccess: null\r\n}\r\nconst authReducer = (state = initialStore, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return { ...state, ...action.data, isAuth: action.data.isAuth }\r\n        case LOGIN_SUCCESS:\r\n            return { ...state, loginSuccess: action.loginSuccess }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const setAuthUserData = (email, userID, login, isAuth) => ({ type: SET_USER_DATA, data: { email, userID, login, isAuth } })\r\nexport const setloginSuccess = (loginSuccess) => ({ type: LOGIN_SUCCESS, loginSuccess })\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    const data = await authAPI.getAuth();\r\n    if (data.resultCode === 0) {\r\n        let { email, id, login } = data.data\r\n        dispatch(setAuthUserData(email, id, login, true))\r\n    }\r\n}\r\n\r\nexport const login = (email, password, remember, setStatus) => async (dispatch) => {\r\n    const response = await authAPI.login(email, password, remember, setStatus)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else if (response.data.resultCode === 1) {\r\n        dispatch(setloginSuccess(true));\r\n    }\r\n}\r\nexport const logout = () => async (dispatch) => {\r\n    const response = await authAPI.logout()\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false))\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default authReducer","import React, {useEffect} from 'react'\r\nimport { connect } from 'react-redux';\r\nimport Header from './Header'\r\nimport { getAuthUserData, logout } from './../../redux/auth-reducer';\r\n\r\n\r\n// class HeaderContainer extends React.Component {\r\n\r\n//     componentDidMount() {\r\n//         this.props.getAuthUserData();\r\n//     }\r\n\r\n//     render() {\r\n//         return <Header {...this.props} />\r\n//     }\r\n// }\r\n\r\nconst HeaderContainer = (props) => {\r\n    useEffect(() => {\r\n        props.getAuthUserData()\r\n        \r\n    }, [])\r\n    return <Header {...props} />\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n})\r\n\r\nexport default connect(mapStateToProps, { getAuthUserData, logout })(HeaderContainer);\r\n","import React from 'react'\r\nimport { Form, Formik, Field } from 'formik';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../../redux/auth-reducer';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nconst Login = (props) => {\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/profile'} />\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <div>\r\n                <h2>LOGIN PLS</h2>\r\n            </div>\r\n            <LoginForm login={props.login} />\r\n            {props.loginSuccess && <Error />}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <Formik\r\n            initialValues={{ email: '', password: '', remember: '' }}\r\n            onSubmit={(data, actions) => {\r\n                let smt = (props.login(data.email, data.password, data.remember, actions.setStatus))\r\n            }}\r\n           \r\n        >\r\n            {\r\n              \r\n                <Form>\r\n                    <Field type=\"text\" name=\"email\" />\r\n                    <Field type=\"password\" name=\"password\" />\r\n                    <Field type=\"checkbox\" name=\"remember\" />\r\n                    <button type=\"submit\"></button>\r\n                </Form>\r\n\r\n            }\r\n        </Formik>\r\n    )\r\n}\r\nconst Error = () => {\r\n    return (\r\n        <div>\r\n            <h2 style={{color: 'red'}}>Wrong password or login</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    loginSuccess: state.auth.loginSuccess\r\n})\r\n\r\nexport default connect(mapStateToProps, { login })(Login)\r\n// data.email, data.password, data.remember\r\n// 'ryoldenshi1232@gmail.com', 'ghbdtnrhjn1', true","\r\nimport { getAuthUserData } from './auth-reducer';\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialStore = {\r\n    initialized: false\r\n}\r\nconst appReducer = (state = initialStore, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return { ...state, initialized: action.initialized }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const initializedSuccess = (initialized) => ({ type: INITIALIZED_SUCCESS, initialized })\r\n\r\nexport const initializeApp = () => async (dispatch) => {\r\n    let promise = await dispatch(getAuthUserData())\r\n    Promise.all([promise])\r\n    dispatch(initializedSuccess(true))\r\n}\r\n\r\n\r\n\r\nexport default appReducer","import React from 'react';\nimport './App.css';\nimport { Route, withRouter } from 'react-router-dom';\nimport Sidebar from './components/sidebar/Sidebar.jsx';\nimport NewsData from './components/News/NewsData';\nimport MessengerContainer from './components/Messenger/MessengerContainer.jsx';\nimport UsersContainer from './components/Users/UsersContainer';\nimport ProfileContainer from './components/Profile/ProfileContainer';\nimport HeaderContainer from './components/header/HeaderContainer';\nimport Login from './components/Login/Login';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport Preloader from './components/common/Preloader/Preloader';\nimport { initializeApp } from './redux/app-reducer';\n\n\nclass App extends Component {\n\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader />\n        }\n        return (\n            <div>\n                <HeaderContainer />\n                <div className='container'>\n                    <Sidebar />\n                    <Route path='/Profile/:userID?' render={() => <ProfileContainer />} />\n\n                    <Route path='/News' render={() => <NewsData />} />\n\n                    <Route path='/Messages' render={() => <MessengerContainer />} />\n\n                    <Route path='/Users' render={() => <UsersContainer />} />\n\n                    <Route path='/Login' render={() => <Login />} />\n\n                </div>\n            </div >\n        );\n    }\n}\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n})\n\nexport default compose(\n    withRouter,\n    connect(mapStateToProps, { initializeApp }))(App);\n\n\n","import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\r\nimport authReducer from './auth-reducer';\r\nimport messengerReducer from './messenger-reducer'\r\nimport newsReducer from './news-reducer';\r\nimport profileReducer from './profile-reducer';\r\nimport usersReducer from './users-reducer';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport appReducer from './app-reducer';\r\n\r\nlet reducers = combineReducers({\r\n    NewsPage: newsReducer,\r\n    MessengerPage: messengerReducer,\r\n    usersPage: usersReducer,\r\n    profilePage: profileReducer,\r\n    auth: authReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)))\r\n\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport store from './redux/redux-store'\nimport { Provider } from 'react-redux';\n\n\n\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </BrowserRouter>, document.getElementById('root'));\n\n\n"],"sourceRoot":""}